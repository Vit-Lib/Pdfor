{
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },

  "Ioc": {
    "Services": [

      {
        /* 生命周期。可为 Scoped、Singleton、Transient。默认Scoped */
        "Lifetime": "Singleton",
        "Service": "Pdfor.Module.Logical.IPdfConvert",

        /* 使用微软Office进行转换，只支持window环境 */
        "///Implementation": "Pdfor.Module.Logical.Office.PdfConvert",

        /* 使用LibReOffice进行转换 */
        "Implementation": "Pdfor.Module.Logical.LibReOffice.PdfConvert",

        /* 使用LibReOffice进行转换，同时指定程序名或工作路径 */
        "//Implementation": {
          /* 动态加载的类名 */
          "className": "Pdfor.Module.Logical.LibReOffice.PdfConvert",
          "Invoke": [
            {
              //"WorkingDirectory": "",
              "fileName": "soffice"
            }
          ]
        }
      }
    ]
  },


  



  /* 微服务适配器 配置 */
  "//ServiceAdaptor": [
    {
      /* 在此Assembly中加载类 */
      "assemblyFile": "ServiceAdaptor.NetCore.Sers.dll",
      /* 动态加载的类名，必须继承接口 ServiceAdaptor.NetCore.IServiceAdaptor */
      "className": "ServiceAdaptor.NetCore.Sers.ServiceAdaptor"

      /* 配置 */

    },
    {
      /* 在此Assembly中加载类 */
      "assemblyFile": "ServiceAdaptor.NetCore.MinHttp.dll",
      /* 动态加载的类名，必须继承接口 ServiceAdaptor.NetCore.IServiceAdaptor */
      "//className": "ServiceAdaptor.NetCore.MinHttp.ServiceAdaptor",

      /* 配置 */
      /* 网关地址，必须指定 */
      "gatewayAddress": "http://127.0.0.1:6080",
      /* 超时时间(单位：秒，可不指定)。1小时 */
      "//timeoutSeconds": 3600
    },
    {
      /* 在此Assembly中加载类 */
      "assemblyFile": "ServiceAdaptor.NetCore.Consul.dll",
      /* 动态加载的类名，必须继承接口 ServiceAdaptor.NetCore.IServiceAdaptor */
      "//className": "ServiceAdaptor.NetCore.Consul.ServiceAdaptor",

      /* 配置 */
      /* 超时时间(单位：秒，可不指定)。1小时 */
      "//timeoutSeconds": 3600,

      /* consul的地址。如 http://127.0.0.1:8500 */
      "ConsulEndpoint": "http://127.0.0.1:8500",

      /* 提供的服务的地址，如 127.0.0.1、sers.cloud */
      "serviceHost": "127.0.0.1",

      /* 提供的服务的端口号 */
      "servicePort": 1106,

      /* 提供的服务的名称，如 ServiceProvider */
      "serviceName": "DevOpsDoc"
    }

  ],


  /* asp.net core 原始web服务配置 */
  "server": {
    "urls": [ "http://*:4301" ],

    /* 映射静态文件。若不指定则不映射静态文件 */
    "staticFiles": [
      {

        /* 静态文件路径。可为相对路径或绝对路径。若为空或空字符串则为默认路径（wwwroot）。demo:"wwwroot/demo" */
        //"rootPath": "wwwroot",

        /* 默认页面（可不指定）。An ordered list of file names to select by default. List length and ordering  may affect performance */
        "defaultFileNames": ["index.html"],

        /* 静态文件类型映射配置的文件路径。可为相对路径或绝对路径。例如"contentTypeMap.json"。若不指定（或指定的文件不存在）则不指定文件类型映射配置 */
        //"contentTypeMapFile": "contentTypeMap.json",

        /* 回应静态文件时额外添加的http回应头。可不指定。 */
        "responseHeaders": {

          //设置浏览器静态文件缓存2592000秒（30天）
          "Cache-Control": "public,max-age=2592000"
        }
      }
    ]
  },

 


  /* Sers配置 begin */
  "Sers": {
    /* 通讯层配置 */
    "CL": {
      /* one conn is one channel.can be multiable */
      "Client": [
        {
          // Ipc.NamedPipe
          /* (x.1) type */
          /* 在此Assembly中查找Builder */
          "assemblyFile": "Sers.CL.Ipc.NamedPipe.dll",
          /* the class of Builder in assemblyFile  */
          "className": "Sers.CL.Ipc.NamedPipe.OrganizeClientBuilder",


          /* (x.2) config */
          // 命名管道只支持本机或局域网。
          /* 服务端机器名或者ip地址（如 103.23.23.23 、win10f），默认 "." */
          "serverName": ".",
          /* 命名管道名称。例如： "Sers.CL.Ipc" */
          "pipeName": "Sers.CL.Ipc.4501",
          /* 连接秘钥，用以验证连接安全性。服务端和客户端必须一致 */
          "secretKey": "SersCL",

          /* 请求超时时间（单位ms，默认60000） */
          "requestTimeoutMs": 3600000
        },
        {
          // Socket.Iocp
          /* (x.1) type - Iocp */
          /* the class of builder in assemblyFile  */
          //"className": "Sers.CL.Socket.Iocp.OrganizeClientBuilder",

          /* (x.2) conn config */
          /* 服务端 host地址。例如： "127.0.0.1"、"serset.com" */
          "host": "127.0.0.1",
          /* 服务端 监听端口号。例如： 4501 */
          "port": 4501,
          /* 连接秘钥，用以验证连接安全性。服务端和客户端必须一致 */
          "secretKey": "SersCL",

          /* 请求超时时间（单位ms，默认60000） */
          "requestTimeoutMs": 3600000
        }
      ]
    },

    /* LocalApiService 配置,可不指定 */
    "LocalApiService": {

      /* 后台服务的线程个数（单位个，默认0,代表不开启服务） */
      "workThreadCount": 4,


      /* 超时时间，若不指定则后台任务永不超时。（主动关闭超过此时间的任务,实际任务强制关闭的时间会在1倍超时时间到2倍超时时间内)。单位：ms。*/
      "//timeout_ms": 300000,


      /* 是否 输出本地Api的调用信息到（ApiTrace）Log文件。默认:false */
      "//PrintTrace": true,


      /* 默认站点名称，可多个,可不指定 */
      "//apiStationNames": [ "demo" ]
    },

    /* ServiceStation配置,可不指定 */
    "ServiceStation": {
      /* serviceStation站点信息 */
      "serviceStationInfo": {
        /* 服务站点名称 */
        "serviceStationName": "Pdfor"
      }
    }

  },

  "serslot": {

    /* 处理请求转发的模式,可不指定。可为 Async(默认)、BackgroundTask */
    /* Async 异步转发请求，没有线程数量限制。此模式下extApi的reply无效。 */
    /* BackgroundTask 启动固定数量的线程转发请求，线程数量为Sers.LocalApiService.workThreadCount。 */
    "Mode": "BackgroundTask",

    /* 额外api。SsApiDesc格式。除了系统api外，可以指定额外api。若指定返回数据（reply）,则直接返回数据；若不指定返回数据，则由host进行处理 */
    "extApi": [
      {
        //路由(可为范接口,如 "/a/*" )
        "route": "/Pdfor/ui/*"
      }
    ]
  },


  /* Vit工具配置，可不指定 */
  "Vit": {
    /* 日志配置,可不指定 */
    "Logger": {
      /* print the log to Log/*.txt default:true  */
      "PrintToTxt": true,
      /* print the log to console. default:true  */
      "PrintToConsole": true
    }
  }
  /* Sers配置 end */



}
